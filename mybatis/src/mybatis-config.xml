<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <!--
        引用外部的properties文件
    -->
    <properties resource="datasource.properties"/>

    <!--
        配置别名，为当前工程中的某些类指定别名
    -->
    <typeAliases>
        <!--
            typeAlias：为某个类配置别名
                type属性：指定类名
                alias属性：指定类的别名
        -->
        <!--<typeAlias type="entity.User" alias="User"/>-->
        <!--
            package：为某个包下的所有类配置别名
                name属性：指定包名，该包下的所有类的别名就是其类名（别名不区分大小写，但建议与类名完全一致）
        -->
        <package name="entity"/>
    </typeAliases>

    <!--
        environments：配置当前工程中可能使用到的所有数据库环境
            default：指定默认使用的环境，取值为某一个environment的id
    -->
    <environments default="hello">
        <!--
            environment：配置某一个数据库环境，可以有多个
                id：指定该环境的唯一标识符
        -->
        <environment id="hello">
            <!--
                transactionManager：配置事务管理器
                    type：指定事务管理器的类型，取值有两种：
                        jdbc：使用简单的jdbc事务操作，如开启、提交、回滚
                                在mybatis中，默认是关闭自动提交事务的，conn.setAutoCommit(false)
                        managed：将事务交给其他框架/容器来处理，如spring
                                mybatis不负责事务，什么都不会做
            -->
            <transactionManager type="jdbc"></transactionManager>
            <!--
                dataSource：配置数据源
                    type：配置数据源的类型，取值有三种：
                        UNPOOLED：简单的JDBC配置，未使用连接池，相当于DriverManager.getConnection(url,username,password)
                        POOLED：使用连接池技术
                        JNDI：通过外部容器来获取连接
            -->
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
        <!--<environment id="world">-->
            <!--<transactionManager type=""></transactionManager>-->
            <!--<dataSource type=""></dataSource>-->
        <!--</environment>-->
    </environments>

    <!--
        注册当前工程中使用的映射文件
    -->
    <mappers>
        <!--
            mapper：注册某一个mapper文件，可以有多个
                resource属性：指定映射文件的路径，写的是相对于src的路径，使用正斜杠分隔
        -->
        <mapper resource="mapper/UserMapper.xml"/>
        <mapper resource="mapper/DeptMapper.xml"/>
        <mapper resource="mapper/EmpMapper.xml"/>
    </mappers>
</configuration>